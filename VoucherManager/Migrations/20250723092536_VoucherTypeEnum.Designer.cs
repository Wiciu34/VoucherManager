// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoucherManager.Data;

#nullable disable

namespace VoucherManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250723092536_VoucherTypeEnum")]
    partial class VoucherTypeEnum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AttractionVoucher", b =>
                {
                    b.Property<int>("AttractionsId")
                        .HasColumnType("int");

                    b.Property<string>("VouchersSerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AttractionsId", "VouchersSerialNumber");

                    b.HasIndex("VouchersSerialNumber");

                    b.ToTable("AttractionVoucher");
                });

            modelBuilder.Entity("VoucherManager.Models.Attraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attractions");
                });

            modelBuilder.Entity("VoucherManager.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("VoucherManager.Models.Voucher", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int");

                    b.Property<string>("InovoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SellDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("SerialNumber");

                    b.HasIndex("GuestId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("AttractionVoucher", b =>
                {
                    b.HasOne("VoucherManager.Models.Attraction", null)
                        .WithMany()
                        .HasForeignKey("AttractionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoucherManager.Models.Voucher", null)
                        .WithMany()
                        .HasForeignKey("VouchersSerialNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoucherManager.Models.Voucher", b =>
                {
                    b.HasOne("VoucherManager.Models.Guest", "Guest")
                        .WithMany("Vouchers")
                        .HasForeignKey("GuestId");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("VoucherManager.Models.Guest", b =>
                {
                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
